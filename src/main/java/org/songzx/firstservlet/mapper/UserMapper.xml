<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.songzx.firstservlet.dao.UserMapper">
  <resultMap id="BaseResultMap" type="org.songzx.firstservlet.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="fullname" jdbcType="VARCHAR" property="fullname" />
    <result column="gender" jdbcType="BIT" property="gender" />
    <result column="is_admin" jdbcType="BIT" property="isAdmin" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="is_lock" jdbcType="BIT" property="isLock" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="create_person" jdbcType="VARCHAR" property="createPerson" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_person" jdbcType="VARCHAR" property="updatePerson" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, fullname, gender, is_admin, department_id, is_lock, is_delete, 
    create_person, create_date, update_person, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from p_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.songzx.firstservlet.model.User">
    insert into p_user (id, username, password, 
      fullname, gender, is_admin, 
      department_id, is_lock, is_delete, 
      create_person, create_date, update_person, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{fullname,jdbcType=VARCHAR}, #{gender,jdbcType=BIT}, #{isAdmin,jdbcType=BIT}, 
      #{departmentId,jdbcType=INTEGER}, #{isLock,jdbcType=BIT}, #{isDelete,jdbcType=BIT}, 
      #{createPerson,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updatePerson,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.songzx.firstservlet.model.User">
    insert into p_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="fullname != null">
        fullname,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="isAdmin != null">
        is_admin,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="isLock != null">
        is_lock,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createPerson != null">
        create_person,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updatePerson != null">
        update_person,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="fullname != null">
        #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIT},
      </if>
      <if test="isAdmin != null">
        #{isAdmin,jdbcType=BIT},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="isLock != null">
        #{isLock,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="createPerson != null">
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null">
        #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.songzx.firstservlet.model.User">
    update p_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="fullname != null">
        fullname = #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="isAdmin != null">
        is_admin = #{isAdmin,jdbcType=BIT},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="isLock != null">
        is_lock = #{isLock,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="createPerson != null">
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null">
        update_person = #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.songzx.firstservlet.model.User">
    update p_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      fullname = #{fullname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      is_admin = #{isAdmin,jdbcType=BIT},
      department_id = #{departmentId,jdbcType=INTEGER},
      is_lock = #{isLock,jdbcType=BIT},
      is_delete = #{isDelete,jdbcType=BIT},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>